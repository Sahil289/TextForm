{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","Mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","aria-current","to","hometext","abouttext","role","placeholder","searchbtntext","onClick","toggleMode","htmlFor","defaultProps","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","disabled","length","new_text","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Math","round","Alert","height","alert","word","str","charAt","slice","capitalize","msg","About","myStyle","aria-labelledby","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.dc963d47.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/TexForm.js\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/TextForm\"\r\n                >\r\n                  {props.hometext}\r\n                </Link>\r\n                {/* <a\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  href=\"#\"\r\n                >\r\n                  {props.hometext}\r\n                </a> */}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/About\">\r\n                  {props.abouttext}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                {props.searchbtntext}\r\n              </button>\r\n            </form>\r\n            <div\r\n              className={`form-check form-switch mx-2 my-2 text-${\r\n                props.Mode === \"light\" ? \"black\" : \"white\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                //role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Dark mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  //Here the \"P\" of propTypes is always small \"p\" and the body of this will have the capital \"P\"\r\n  title: PropTypes.string.isRequired,\r\n  hometext: PropTypes.string.isRequired,\r\n  abouttext: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  //Here the \"P\" of propTypes is always small \"p\" and the body of this will have the capital \"P\"\r\n  title: \"Todo List\",\r\n  hometext: \"Home\",\r\n  abouttext: \"About Us\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  //text = \"New text\"; //Incorrect way of setting the value of the state;\r\n  //setText(\"New text\"); //Correct way of setting the value of the state;\r\n\r\n  const HandleUpClick = () => {\r\n    let new_text = text.toUpperCase();\r\n    setText(new_text);\r\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n  };\r\n\r\n  const HandleDownClick = () => {\r\n    let new_text = text.toLowerCase();\r\n    setText(new_text);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n  };\r\n  const ClearClick = () => {\r\n    let new_text = \"\";\r\n    setText(new_text);\r\n    props.showAlert(\"Cleared the Input!\", \"success\");\r\n  };\r\n\r\n  //Remove extra spaces using regex\r\n  const HandleExtraSpaces = () => {\r\n    let new_text = text.split(/[ ]+/);\r\n    setText(new_text.join(\" \"));\r\n    props.showAlert(\"Removed additional spacing!\", \"success\");\r\n  };\r\n\r\n  //Select & copy the text\r\n  const HandleCopyText = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Copied text to the clipboard!\", \"success\");\r\n  };\r\n\r\n  const HandleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter text here!\");\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        color: props.Mode === \"light\" ? \"black\" : \"white\",\r\n      }}\r\n    >\r\n      <div>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"myBox\" className=\"form-label\">\r\n            Example textarea\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={HandleOnChange}\r\n            style={{\r\n              backgroundColor: props.Mode === \"light\" ? \"white\" : \"#13466e\",\r\n              color: props.Mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={HandleUpClick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={HandleDownClick}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={HandleCopyText}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={HandleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-danger mx-1 my-1\"\r\n          onClick={ClearClick}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h2>Summary</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text.split(\" \").filter((element) => {\r\n                return element.length !== 0;\r\n              }).length +\r\n              \" words & \" +\r\n              text.length +\r\n              \" characters.\"\r\n            : \"0 word & 0 character.\"}\r\n        </p>\r\n        <p>\r\n          {text.length > 0\r\n            ? \"It will take \" +\r\n              Math.round(\r\n                0.8 *\r\n                  text.split(\" \").filter((element) => {\r\n                    return element.length !== 0;\r\n                  }).length\r\n              ) +\r\n              \" Minutes to read\"\r\n            : \"It will take 0 Minute to read.\"}\r\n          {/* It will take {Math.round(0.8 * text.split(\" \").length)} Minutes to */}\r\n          read.\r\n        </p>\r\n        {/* if (text.split(\" \").length == 1)\r\n        {\r\n            <p>It will take {0.8 * text.split(\" \").length} Minute to read.</p>\r\n        }\r\n        else if (text.split(\" \").length > 1)\r\n        {\r\n            <p>It will take {0.8 * text.split(\" \").length} Minutes to read.</p>\r\n        }\r\n        else\r\n        {\r\n            <p>It will take 0 Minute to read.</p>\r\n        }\r\n        <h2>Prview</h2> */}\r\n        <p>{text.length > 0 ? text : \"Nothing to preview!\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const str = word.toLowerCase();\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: \"60px\" }}>\r\n      {props.alert && (\r\n        <div>\r\n          <div\r\n            className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n            role=\"alert\"\r\n          >\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  // const [myStyle, setmyStyle] = useState({\r\n  //   color: \"black\",\r\n  //   backgroundColor: \"white\",\r\n  // });\r\n\r\n  // const [btntext, setbtntext] = useState(\"Enable dark mode\");\r\n\r\n  // const toggleStyle = () => {\r\n  //   if (myStyle.color === \"black\") {\r\n  //     setmyStyle({\r\n  //       color: \"white\",\r\n  //       backgroundColor: \"black\",\r\n  //       border: \"1px solid white\",\r\n  //     });\r\n  //     // setbtntext(\"Enable light mode\");\r\n  //   } else {\r\n  //     setmyStyle({\r\n  //       color: \"black\",\r\n  //       backgroundColor: \"white\",\r\n  //     });\r\n  //     // setbtntext(\"Enable dark mode\");\r\n  //   }\r\n  // };\r\n\r\n  const myStyle = {\r\n    color: props.Mode === \"dark\" ? \"white\" : \"rgb(36 74 104)\",\r\n    backgroundColor: props.Mode === \"dark\" ? \"rgb(36 74 104)\" : \"white\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1\r\n          className=\"my-3\"\r\n          style={{ color: props.Mode === \"dark\" ? \"white\" : \"rgb(36 74 104)\" }}\r\n        >\r\n          About Us\r\n        </h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={myStyle}\r\n              >\r\n                <strong>Supported by every Browser</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>Chrome, Edge, etc.</strong> are included in the list of\r\n                other browsers. <code>.todo</code>.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n                style={myStyle}\r\n              >\r\n                <strong>Completely Free</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                This utility is free and nothing is required in order to mine\r\n                your data and make it usefull.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n                style={myStyle}\r\n              >\r\n                <strong>Data Manipulation</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>\r\n                  Manipulating data using some algorithm is our priority.{\" \"}\r\n                </strong>\r\n                And presenting you the best outcome.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"container my-3\">\r\n          <button\r\n            onClick={toggleStyle}\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n          >\r\n            {btntext}\r\n          </button>\r\n        </div> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [Mode, setMode] = useState(\"light\"); //Whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (Mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      // document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"Todo - Dark Mode\";\n\n      //The below code is used to grab the attention of the user by manipulating the tittle of the website.\n      // setInterval(() => {\n      //   document.title = \"Todo - Dark Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install Todo - Dark Mode\";\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"\";\n      // document.body.style.color = \"black\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"Todo - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        {/* <Navbar\n        title=\"Todo\"\n        hometext=\"Home\"\n        abouttext=\"About\"\n        searchbtntext=\"Search\"\n      /> */}\n        {/* <Navbar/> */}\n        <Navbar\n          title=\"Todo\"\n          hometext=\"Home\"\n          searchbtntext=\"Search\"\n          Mode={Mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          <Routes>\n            <Route\n              exact\n              path=\"/TextForm\"\n              element={\n                <TextForm\n                  heading=\"Enter the text to analyze!\"\n                  Mode={Mode}\n                  showAlert={showAlert}\n                />\n              }\n            />\n            <Route exact path=\"/About\" element={<About Mode={Mode} />} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}